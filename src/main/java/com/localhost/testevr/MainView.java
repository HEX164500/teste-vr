/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.localhost.testevr;

import com.localhost.testevr.configuration.DatabaseConnector;
import com.localhost.testevr.configuration.DatabaseSchemeController;
import com.localhost.testevr.model.entities.Aluno;
import com.localhost.testevr.model.entities.Curso;
import com.localhost.testevr.services.AlunoController;
import com.localhost.testevr.services.CursoController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lucas
 */
public class MainView extends javax.swing.JFrame {

    private static boolean criando_aluno = true;
    private static boolean criando_curso = true;

    /**
     * Creates new form MainView
     */
    public MainView() {
        DatabaseSchemeController.createSchemas();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filtroBuscaAlunoBtnGroup = new javax.swing.ButtonGroup();
        cursosAlunoFrame = new javax.swing.JFrame();
        cursosAlunoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeAlunoVerCursoLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaCursosAlunos = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        adicionarCursoAlunoFrame = new javax.swing.JFrame();
        cursosAlunoPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaCursosAdicionarAoAlunoTable = new javax.swing.JTable();
        adicionarAlunoAoCursoBtn = new javax.swing.JToggleButton();
        nomeAlunoSelecionarCursoLabel = new javax.swing.JLabel();
        verAlunosCursoFrame = new javax.swing.JFrame();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabelaDeAlunosNoCurso = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        nomeAluno = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codigoAluno = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnNovoAluno = new javax.swing.JButton();
        btnExcluirAluno = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnSalvarAluno = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAlunos = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel8 = new javax.swing.JPanel();
        btnFiltrarBuscaPorCodigo = new javax.swing.JButton();
        valorFiltroAluno = new javax.swing.JTextField();
        radioBtnBuscaAlunoCodigo = new javax.swing.JRadioButton();
        radioBtnBuscaAlunoNome = new javax.swing.JRadioButton();
        btnLimparFiltros = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        estadoConexao = new javax.swing.JLabel();
        versaoSistema = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCursos = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        descricaoCurso = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        codigoCurso = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        btnNovoCurso = new javax.swing.JButton();
        btnExcluirCurso = new javax.swing.JButton();
        btnBuscaAlunosCurso = new javax.swing.JButton();
        btnSalvarCurso = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ementaCurso = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();

        cursosAlunoFrame.setAlwaysOnTop(true);
        cursosAlunoFrame.setLocationByPlatform(true);
        cursosAlunoFrame.setMinimumSize(new java.awt.Dimension(614, 370));
        cursosAlunoFrame.setPreferredSize(new java.awt.Dimension(614, 370));
        cursosAlunoFrame.setResizable(false);
        cursosAlunoFrame.setSize(new java.awt.Dimension(614, 370));

        cursosAlunoPanel.setName("Cursos do aluno"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel1.setText("Exibindo cursos do aluno selecionado");

        nomeAlunoVerCursoLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N

        tabelaCursosAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Ementa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCursosAlunos.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tabelaCursosAlunosVetoableChange(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaCursosAlunos);
        if (tabelaCursosAlunos.getColumnModel().getColumnCount() > 0) {
            tabelaCursosAlunos.getColumnModel().getColumn(0).setMinWidth(70);
            tabelaCursosAlunos.getColumnModel().getColumn(0).setMaxWidth(70);
            tabelaCursosAlunos.getColumnModel().getColumn(1).setMinWidth(200);
            tabelaCursosAlunos.getColumnModel().getColumn(1).setMaxWidth(200);
            tabelaCursosAlunos.getColumnModel().getColumn(2).setMinWidth(300);
            tabelaCursosAlunos.getColumnModel().getColumn(2).setMaxWidth(300);
        }

        jToggleButton1.setText("Adicionar Curso");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Remover curso selecionado");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cursosAlunoPanelLayout = new javax.swing.GroupLayout(cursosAlunoPanel);
        cursosAlunoPanel.setLayout(cursosAlunoPanelLayout);
        cursosAlunoPanelLayout.setHorizontalGroup(
            cursosAlunoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cursosAlunoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cursosAlunoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cursosAlunoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomeAlunoVerCursoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cursosAlunoPanelLayout.createSequentialGroup()
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton2)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        cursosAlunoPanelLayout.setVerticalGroup(
            cursosAlunoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cursosAlunoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cursosAlunoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomeAlunoVerCursoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cursosAlunoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout cursosAlunoFrameLayout = new javax.swing.GroupLayout(cursosAlunoFrame.getContentPane());
        cursosAlunoFrame.getContentPane().setLayout(cursosAlunoFrameLayout);
        cursosAlunoFrameLayout.setHorizontalGroup(
            cursosAlunoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cursosAlunoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cursosAlunoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cursosAlunoFrameLayout.setVerticalGroup(
            cursosAlunoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cursosAlunoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cursosAlunoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adicionarCursoAlunoFrame.setAlwaysOnTop(true);
        adicionarCursoAlunoFrame.setLocationByPlatform(true);
        adicionarCursoAlunoFrame.setMinimumSize(new java.awt.Dimension(604, 359));
        adicionarCursoAlunoFrame.setPreferredSize(new java.awt.Dimension(604, 359));
        adicionarCursoAlunoFrame.setResizable(false);

        cursosAlunoPanel1.setName("Cursos do aluno"); // NOI18N

        jLabel11.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel11.setText("Selecione um curso para adicionar ao aluno: ");

        tabelaCursosAdicionarAoAlunoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Ementa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCursosAdicionarAoAlunoTable.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                tabelaCursosAdicionarAoAlunoTableVetoableChange(evt);
            }
        });
        jScrollPane5.setViewportView(tabelaCursosAdicionarAoAlunoTable);
        if (tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumnCount() > 0) {
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(0).setMinWidth(70);
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(0).setMaxWidth(70);
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(1).setMinWidth(200);
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(1).setMaxWidth(200);
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(2).setMinWidth(300);
            tabelaCursosAdicionarAoAlunoTable.getColumnModel().getColumn(2).setMaxWidth(300);
        }

        adicionarAlunoAoCursoBtn.setLabel("Adicionar aluno ao curso selecionado");
        adicionarAlunoAoCursoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarAlunoAoCursoBtnActionPerformed(evt);
            }
        });

        nomeAlunoSelecionarCursoLabel.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        javax.swing.GroupLayout cursosAlunoPanel1Layout = new javax.swing.GroupLayout(cursosAlunoPanel1);
        cursosAlunoPanel1.setLayout(cursosAlunoPanel1Layout);
        cursosAlunoPanel1Layout.setHorizontalGroup(
            cursosAlunoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cursosAlunoPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cursosAlunoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cursosAlunoPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeAlunoSelecionarCursoLabel))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adicionarAlunoAoCursoBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cursosAlunoPanel1Layout.setVerticalGroup(
            cursosAlunoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cursosAlunoPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cursosAlunoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nomeAlunoSelecionarCursoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adicionarAlunoAoCursoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout adicionarCursoAlunoFrameLayout = new javax.swing.GroupLayout(adicionarCursoAlunoFrame.getContentPane());
        adicionarCursoAlunoFrame.getContentPane().setLayout(adicionarCursoAlunoFrameLayout);
        adicionarCursoAlunoFrameLayout.setHorizontalGroup(
            adicionarCursoAlunoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adicionarCursoAlunoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cursosAlunoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adicionarCursoAlunoFrameLayout.setVerticalGroup(
            adicionarCursoAlunoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adicionarCursoAlunoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cursosAlunoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        verAlunosCursoFrame.setLocationByPlatform(true);
        verAlunosCursoFrame.setMinimumSize(new java.awt.Dimension(592, 354));
        verAlunosCursoFrame.setResizable(false);

        tabelaDeAlunosNoCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do aluno", "Nome do aluno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tabelaDeAlunosNoCurso);
        if (tabelaDeAlunosNoCurso.getColumnModel().getColumnCount() > 0) {
            tabelaDeAlunosNoCurso.getColumnModel().getColumn(0).setMinWidth(100);
            tabelaDeAlunosNoCurso.getColumnModel().getColumn(0).setMaxWidth(100);
            tabelaDeAlunosNoCurso.getColumnModel().getColumn(1).setMinWidth(450);
            tabelaDeAlunosNoCurso.getColumnModel().getColumn(1).setMaxWidth(450);
        }

        jLabel10.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel10.setText("Lista de alunos do curso");

        javax.swing.GroupLayout verAlunosCursoFrameLayout = new javax.swing.GroupLayout(verAlunosCursoFrame.getContentPane());
        verAlunosCursoFrame.getContentPane().setLayout(verAlunosCursoFrameLayout);
        verAlunosCursoFrameLayout.setHorizontalGroup(
            verAlunosCursoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verAlunosCursoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(verAlunosCursoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        verAlunosCursoFrameLayout.setVerticalGroup(
            verAlunosCursoFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, verAlunosCursoFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teste VR Software - Lucas Rafael de Quadros");
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });
        jTabbedPane1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane1FocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de alunos"));

        nomeAluno.setToolTipText("Digite o nome do aluno");
        nomeAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeAlunoActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome: ");

        jLabel3.setText("Código: ");

        codigoAluno.setEditable(false);
        codigoAluno.setToolTipText("Código do aluno ( campo não editavel )");
        codigoAluno.setEnabled(false);
        codigoAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoAlunoActionPerformed(evt);
            }
        });

        jPanel4.setBackground(java.awt.SystemColor.controlHighlight);
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNovoAluno.setBackground(java.awt.SystemColor.activeCaption);
        btnNovoAluno.setText("Novo");
        btnNovoAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoAlunoActionPerformed(evt);
            }
        });

        btnExcluirAluno.setBackground(java.awt.SystemColor.activeCaption);
        btnExcluirAluno.setText("Excluir");
        btnExcluirAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirAlunoActionPerformed(evt);
            }
        });

        jButton1.setBackground(java.awt.SystemColor.activeCaption);
        jButton1.setText("Verificar cursos do aluno");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSalvarAluno.setBackground(java.awt.SystemColor.activeCaption);
        btnSalvarAluno.setText("Salvar");
        btnSalvarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlunoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvarAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNovoAluno)
                        .addComponent(btnExcluirAluno)
                        .addComponent(btnSalvarAluno)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(codigoAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codigoAluno, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(nomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabelaAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código aluno", "Nome do aluno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAlunos.getTableHeader().setReorderingAllowed(false);
        tabelaAlunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaAlunosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAlunos);
        if (tabelaAlunos.getColumnModel().getColumnCount() > 0) {
            tabelaAlunos.getColumnModel().getColumn(0).setMinWidth(100);
            tabelaAlunos.getColumnModel().getColumn(0).setMaxWidth(100);
            tabelaAlunos.getColumnModel().getColumn(1).setMinWidth(70);
        }

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Filtrar resultados de busca"));

        btnFiltrarBuscaPorCodigo.setBackground(java.awt.SystemColor.activeCaption);
        btnFiltrarBuscaPorCodigo.setText("Buscar");
        btnFiltrarBuscaPorCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarBuscaPorCodigoActionPerformed(evt);
            }
        });

        filtroBuscaAlunoBtnGroup.add(radioBtnBuscaAlunoCodigo);
        radioBtnBuscaAlunoCodigo.setSelected(true);
        radioBtnBuscaAlunoCodigo.setText("buscar por codigo");

        filtroBuscaAlunoBtnGroup.add(radioBtnBuscaAlunoNome);
        radioBtnBuscaAlunoNome.setText("buscar por nome");

        btnLimparFiltros.setBackground(java.awt.SystemColor.activeCaption);
        btnLimparFiltros.setText("Limpar Filtros");
        btnLimparFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioBtnBuscaAlunoNome)
                            .addComponent(radioBtnBuscaAlunoCodigo)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(valorFiltroAluno, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnFiltrarBuscaPorCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnLimparFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valorFiltroAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(btnFiltrarBuscaPorCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimparFiltros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(radioBtnBuscaAlunoCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioBtnBuscaAlunoNome)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Sobre"));

        jLabel4.setText("Versão do sistema: ");

        jLabel5.setText("Estado da conexão: ");

        estadoConexao.setText("Verificando...");

        versaoSistema.setText("0.01");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estadoConexao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(versaoSistema)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(versaoSistema))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(estadoConexao))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Alunos", jPanel1);

        jPanel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel2FocusGained(evt);
            }
        });

        tabelaCursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código aluno", "Descricao do curso", "Ementa do curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCursos.getTableHeader().setReorderingAllowed(false);
        tabelaCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelaCursosMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaCursos);
        if (tabelaCursos.getColumnModel().getColumnCount() > 0) {
            tabelaCursos.getColumnModel().getColumn(0).setMinWidth(100);
            tabelaCursos.getColumnModel().getColumn(0).setMaxWidth(100);
            tabelaCursos.getColumnModel().getColumn(1).setMinWidth(70);
        }

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de alunos"));

        descricaoCurso.setToolTipText("Digite o nome do aluno");
        descricaoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricaoCursoActionPerformed(evt);
            }
        });

        jLabel6.setText("Nome: ");

        jLabel7.setText("Código: ");

        codigoCurso.setEditable(false);
        codigoCurso.setToolTipText("Código do aluno ( campo não editavel )");
        codigoCurso.setEnabled(false);
        codigoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoCursoActionPerformed(evt);
            }
        });

        jPanel9.setBackground(java.awt.SystemColor.controlHighlight);
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNovoCurso.setBackground(java.awt.SystemColor.activeCaption);
        btnNovoCurso.setText("Novo");
        btnNovoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoCursoActionPerformed(evt);
            }
        });

        btnExcluirCurso.setBackground(java.awt.SystemColor.activeCaption);
        btnExcluirCurso.setText("Excluir");
        btnExcluirCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirCursoActionPerformed(evt);
            }
        });

        btnBuscaAlunosCurso.setBackground(java.awt.SystemColor.activeCaption);
        btnBuscaAlunosCurso.setText("Verificar alunos do curso");
        btnBuscaAlunosCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaAlunosCursoActionPerformed(evt);
            }
        });

        btnSalvarCurso.setBackground(java.awt.SystemColor.activeCaption);
        btnSalvarCurso.setText("Salvar");
        btnSalvarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCursoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvarCurso, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscaAlunosCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoCurso)
                    .addComponent(btnExcluirCurso)
                    .addComponent(btnBuscaAlunosCurso)
                    .addComponent(btnSalvarCurso))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ementaCurso.setColumns(20);
        ementaCurso.setRows(5);
        jScrollPane3.setViewportView(ementaCurso);

        jLabel9.setText("Ementa: ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addComponent(codigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(59, 59, 59)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(descricaoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descricaoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 714, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cursos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeAlunoActionPerformed

    private void codigoAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoAlunoActionPerformed

    private void btnNovoAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoAlunoActionPerformed
        this.codigoAluno.setText("");
        this.nomeAluno.setText("");
        criando_aluno = true;
    }//GEN-LAST:event_btnNovoAlunoActionPerformed

    private void btnExcluirAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirAlunoActionPerformed
        if (criando_aluno) {
            return;
        }

        int result = JOptionPane.showConfirmDialog(null, "Realmente deseja excluir o aluno selecionado ?",
                "Confirme para excluir", JOptionPane.OK_CANCEL_OPTION);

        if (result != 0) {
            return;
        }

        try {
            if (AlunoController.excluirAluno(Integer.parseInt(codigoAluno.getText()))) {
                DefaultTableModel model = (DefaultTableModel) tabelaAlunos.getModel();
                model.removeRow(tabelaAlunos.getSelectedRow());
                btnNovoAluno.doClick();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao excluir aluno", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirAlunoActionPerformed

    private void btnFiltrarBuscaPorCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarBuscaPorCodigoActionPerformed

        boolean busca_codigo = radioBtnBuscaAlunoCodigo.isSelected();
        DefaultTableModel model = (DefaultTableModel) tabelaAlunos.getModel();

        Integer codigo = null;
        if (busca_codigo) {
            try {
                codigo = Integer.parseInt(valorFiltroAluno.getText().trim());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "A busca por código só aceita números",
                        "Filtro inválido", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        try {
            model.setRowCount(0);
            if (busca_codigo) {
                Aluno aluno = AlunoController.buscarAlunoPorCodigo(codigo);

                Object data[] = {aluno.getCodigo(), aluno.getNome()};
                model.addRow(data);
            } else {

                String nome = valorFiltroAluno.getText().trim();

                if (nome.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Algum nome deve ser fornecido para busca",
                            "Filtro inválido", JOptionPane.ERROR_MESSAGE);
                }

                List<Aluno> alunos = AlunoController.buscaPorNomeContendo(nome);

                alunos.forEach(aluno -> {
                    Object data[] = {aluno.getCodigo(), aluno.getNome()};
                    model.addRow(data);
                });
            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao realizar busca", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnFiltrarBuscaPorCodigoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (criando_aluno) {
            return;
        }

        try {
            DefaultTableModel table = (DefaultTableModel) tabelaCursosAlunos.getModel();

            table.setRowCount(0);

            nomeAlunoVerCursoLabel.setText(nomeAluno.getText());

            AlunoController.carregarCursos(Integer.parseInt(codigoAluno.getText())).getCursos().forEach(curso -> {

                Object data[] = {curso.getCodigo(), curso.getDescricao(), curso.getEmenta()};
                table.addRow(data);
            });
            cursosAlunoFrame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Erro ao carregar cursos do aluno", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSalvarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlunoActionPerformed

        if (!criando_aluno) {
            btnSalvarAlunoAtualizar();
            return;
        }

        try {
            Aluno aluno = AlunoController.novoAluno(this.nomeAluno.getText());

            DefaultTableModel table = (DefaultTableModel) tabelaAlunos.getModel();

            Object data[] = {aluno.getCodigo(), aluno.getNome()};

            table.addRow(data);
            codigoAluno.setText(aluno.getCodigo().toString());
            nomeAluno.setText(aluno.getNome());
            criando_aluno = false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Erro ao criar aluno", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarAlunoActionPerformed

    private void btnSalvarAlunoAtualizar() {
        try {
            boolean resultado = AlunoController
                    .atualizaAluno(Integer.parseInt(this.codigoAluno.getText()), this.nomeAluno.getText());

            if (!resultado) {
                return;
            }

            DefaultTableModel table = (DefaultTableModel) tabelaAlunos.getModel();

            int row = tabelaAlunos.getSelectedRow();

            table.setValueAt(this.nomeAluno.getText(), row, 1);
            criando_aluno = false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao atualizar aluno", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnSalvarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCursoActionPerformed

        if (!criando_curso) {
            atualizarCurso();
            return;
        }

        try {
            Curso curso = CursoController.novoCurso(
                    this.descricaoCurso.getText(),
                    this.ementaCurso.getText()
            );

            DefaultTableModel table = (DefaultTableModel) tabelaCursos.getModel();

            Object data[] = {curso.getCodigo(), curso.getDescricao(), curso.getEmenta()};

            table.addRow(data);
            codigoCurso.setText(curso.getCodigo().toString());
            descricaoCurso.setText(curso.getDescricao());
            ementaCurso.setText(curso.getEmenta());
            criando_curso = false;
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao criar curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarCursoActionPerformed

    public void atualizarCurso() {

        try {
            boolean resultado = CursoController.atualizaCurso(
                    Integer.parseInt(this.codigoCurso.getText()),
                    this.descricaoCurso.getText(),
                    this.ementaCurso.getText()
            );

            if (!resultado) {
                return;
            }

            DefaultTableModel table = (DefaultTableModel) tabelaCursos.getModel();

            int row = tabelaCursos.getSelectedRow();

            table.setValueAt(this.descricaoCurso.getText(), row, 1);
            table.setValueAt(this.ementaCurso.getText(), row, 2);

            criando_curso = false;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao atualizar curso", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnBuscaAlunosCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaAlunosCursoActionPerformed

        if (criando_curso) {
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tabelaDeAlunosNoCurso.getModel();

        model.setRowCount(0);

        try {

            Curso curso = new Curso();
            curso.setCodigo(Integer.parseInt(codigoCurso.getText()));

            CursoController.carregaAlunosCurso(curso).getAlunos().forEach(aluno -> {

                Object data[] = {aluno.getCodigo(), aluno.getNome()};
                model.addRow(data);
            });

            verAlunosCursoFrame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao excluir curso", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnBuscaAlunosCursoActionPerformed

    private void btnExcluirCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirCursoActionPerformed
        if (criando_curso) {
            return;
        }

        int result = JOptionPane.showConfirmDialog(null, "Realmente deseja excluir o curso selecionado ?",
                "Confirme para excluir", JOptionPane.OK_CANCEL_OPTION);

        if (result != 0) {
            return;
        }

        try {
            if (CursoController.excluirCurso(Integer.parseInt(codigoCurso.getText()))) {

                DefaultTableModel model = (DefaultTableModel) tabelaCursos.getModel();
                model.removeRow(tabelaCursos.getSelectedRow());
                btnNovoCurso.doClick();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao excluir curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirCursoActionPerformed

    private void btnNovoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoCursoActionPerformed

        codigoCurso.setText("");
        descricaoCurso.setText("");
        ementaCurso.setText("");

        criando_curso = true;

    }//GEN-LAST:event_btnNovoCursoActionPerformed

    private void codigoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoCursoActionPerformed

    private void descricaoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricaoCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricaoCursoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        try {

            if (DatabaseConnector.getConnection().isValid(10000)) {
                estadoConexao.setText(("OK"));
            } else {
                estadoConexao.setText(("FALHA !"));
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao verificar status do sistema", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            DefaultTableModel table_aluno = (DefaultTableModel) tabelaAlunos.getModel();
            table_aluno.setRowCount(0);
            AlunoController.buscaTodos().forEach(aluno -> {
                Object data[] = {aluno.getCodigo(), aluno.getNome()};
                table_aluno.addRow(data);
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao carregar alunos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowOpened

    private void tabelaAlunosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlunosMousePressed

        int row = tabelaAlunos.getSelectedRow();
        codigoAluno.setText(tabelaAlunos.getValueAt(row, 0).toString());
        nomeAluno.setText(tabelaAlunos.getValueAt(row, 1).toString());
        criando_aluno = false;
    }//GEN-LAST:event_tabelaAlunosMousePressed

    private void tabelaCursosAlunosVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tabelaCursosAlunosVetoableChange


    }//GEN-LAST:event_tabelaCursosAlunosVetoableChange

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        int selected_row = tabelaCursosAlunos.getSelectedRow();
        if (selected_row == -1) {
            return;
        }

        try {
            DefaultTableModel table = (DefaultTableModel) tabelaCursosAlunos.getModel();

            boolean resultado = AlunoController.removerCursoAluno(Integer.parseInt(codigoAluno.getText()),
                    Integer.parseInt(table.getValueAt(selected_row, 0).toString()));

            if (resultado) {
                table.removeRow(selected_row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao remover aluno do curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed

        DefaultTableModel table = (DefaultTableModel) tabelaCursosAdicionarAoAlunoTable.getModel();
        table.setRowCount(0);

        try {
            CursoController.buscaTodosCursosSemAluno(Integer.parseInt(codigoAluno.getText())).forEach(curso -> {

                Object data[] = {curso.getCodigo(), curso.getDescricao(), curso.getEmenta()};
                table.addRow(data);
            });

            adicionarCursoAlunoFrame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao buscar cursos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void tabelaCursosAdicionarAoAlunoTableVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_tabelaCursosAdicionarAoAlunoTableVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaCursosAdicionarAoAlunoTableVetoableChange

    private void adicionarAlunoAoCursoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarAlunoAoCursoBtnActionPerformed
        int selected_row = tabelaCursosAdicionarAoAlunoTable.getSelectedRow();
        if (selected_row == -1) {
            return;
        }

        try {
            DefaultTableModel table_cursos_aluno = (DefaultTableModel) tabelaCursosAlunos.getModel();
            DefaultTableModel table_cursos = (DefaultTableModel) tabelaCursosAdicionarAoAlunoTable.getModel();

            boolean resultado = AlunoController.adicionarCursoAluno(Integer.parseInt(codigoAluno.getText()),
                    Integer.parseInt(table_cursos.getValueAt(selected_row, 0).toString()));

            if (resultado) {

                String codigo = table_cursos.getValueAt(selected_row, 0).toString();
                String descricao = table_cursos.getValueAt(selected_row, 1).toString();
                String ementa = table_cursos.getValueAt(selected_row, 2).toString();

                Object data[] = {codigo, descricao, ementa};

                table_cursos_aluno.addRow(data);
                table_cursos.removeRow(selected_row);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao adicionar aluno ao curso", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_adicionarAlunoAoCursoBtnActionPerformed

    private void jTabbedPane1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1FocusGained

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained

    }//GEN-LAST:event_jPanel1FocusGained

    private void jPanel2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel2FocusGained


    }//GEN-LAST:event_jPanel2FocusGained

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

        int jtable_index = jTabbedPane1.getSelectedIndex();

        try {
            switch (jtable_index) {
                case 0:

                    DefaultTableModel table_aluno = (DefaultTableModel) tabelaAlunos.getModel();
                    table_aluno.setRowCount(0);
                    AlunoController.buscaTodos().forEach(aluno -> {
                        Object data[] = {aluno.getCodigo(), aluno.getNome()};
                        table_aluno.addRow(data);
                    });
                    break;
                case 1:

                    DefaultTableModel table_curso = (DefaultTableModel) tabelaCursos.getModel();
                    table_curso.setRowCount(0);
                    CursoController.buscaTodos().forEach(curso -> {
                        Object data[] = {curso.getCodigo(), curso.getDescricao(), curso.getEmenta()};
                        table_curso.addRow(data);
                    });
                    break;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao carregar " + (jtable_index == 0 ? "alunos" : "curso"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            DatabaseConnector.getConnection().close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao encerrar conexão com a base de dados", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void tabelaCursosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCursosMousePressed

        int row = tabelaCursos.getSelectedRow();
        codigoCurso.setText(tabelaCursos.getValueAt(row, 0).toString());
        descricaoCurso.setText(tabelaCursos.getValueAt(row, 1).toString());
        ementaCurso.setText(tabelaCursos.getValueAt(row, 2).toString());
        criando_curso = false;
    }//GEN-LAST:event_tabelaCursosMousePressed

    private void btnLimparFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFiltrosActionPerformed
        valorFiltroAluno.setText("");
        try {

            DefaultTableModel table_aluno = (DefaultTableModel) tabelaAlunos.getModel();
            table_aluno.setRowCount(0);
            AlunoController.buscaTodos().forEach(aluno -> {
                Object data[] = {aluno.getCodigo(), aluno.getNome()};
                table_aluno.addRow(data);
            });
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    "Erro ao carregar alunos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLimparFiltrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton adicionarAlunoAoCursoBtn;
    private javax.swing.JFrame adicionarCursoAlunoFrame;
    private javax.swing.JButton btnBuscaAlunosCurso;
    private javax.swing.JButton btnExcluirAluno;
    private javax.swing.JButton btnExcluirCurso;
    private javax.swing.JButton btnFiltrarBuscaPorCodigo;
    private javax.swing.JButton btnLimparFiltros;
    private javax.swing.JButton btnNovoAluno;
    private javax.swing.JButton btnNovoCurso;
    private javax.swing.JButton btnSalvarAluno;
    private javax.swing.JButton btnSalvarCurso;
    private javax.swing.JTextField codigoAluno;
    private javax.swing.JTextField codigoCurso;
    private javax.swing.JFrame cursosAlunoFrame;
    private javax.swing.JPanel cursosAlunoPanel;
    private javax.swing.JPanel cursosAlunoPanel1;
    private javax.swing.JTextField descricaoCurso;
    private javax.swing.JTextArea ementaCurso;
    private javax.swing.JLabel estadoConexao;
    private javax.swing.ButtonGroup filtroBuscaAlunoBtnGroup;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JTextField nomeAluno;
    private javax.swing.JLabel nomeAlunoSelecionarCursoLabel;
    private javax.swing.JLabel nomeAlunoVerCursoLabel;
    private javax.swing.JRadioButton radioBtnBuscaAlunoCodigo;
    private javax.swing.JRadioButton radioBtnBuscaAlunoNome;
    private javax.swing.JTable tabelaAlunos;
    private javax.swing.JTable tabelaCursos;
    private javax.swing.JTable tabelaCursosAdicionarAoAlunoTable;
    private javax.swing.JTable tabelaCursosAlunos;
    private javax.swing.JTable tabelaDeAlunosNoCurso;
    private javax.swing.JTextField valorFiltroAluno;
    private javax.swing.JFrame verAlunosCursoFrame;
    private javax.swing.JLabel versaoSistema;
    // End of variables declaration//GEN-END:variables
}
